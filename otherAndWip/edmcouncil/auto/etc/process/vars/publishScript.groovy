#!/usr/bin/env groovy

//
// Return the stage object that runs the hygiene tests
//
def hygiene() {

  return dockerScript.runInOntologyPublisherContainer(
    shortStageName: 'hygiene',
    longStageName: 'Hygiene Tests'
  ) {
    sh "/publisher/publish.sh hygiene"
  }
}

//
// Return the stage that produces the output of the given product
//
def product(String product) {

  String[] unstashOutputDirs = []

  if (product != "ontology") {
    unstashOutputDirs = ['ontology']
  }

  return dockerScript.runInOntologyPublisherContainer(
    shortStageName: product,
    longStageName: "Build ${product.capitalize()}",
    archiveArtifacts: true,
    unstashOutputDirs: unstashOutputDirs
  ) {
    sh "/publisher/publish.sh ${product}"
    stash name: "output-${product}", includes: "output/${env.ONTPUB_FAMILY}/${product}/**"
  }
}

//
// Return the stage object that runs the publish action
//
def publish(String[] derivedProducts) {

  return dockerScript.runInOntologyPublisherContainer(
    shortStageName: 'publish',
    longStageName: 'Build Final Content',
    unstashOutputDirs: (derivedProducts - 'ontology')
  ) {
    //
    // Now after all the above is done, make sure we run the final
    // publish step which zips it all up into the output directory
    //
    sh "/publisher/publish.sh publish"
    //
    // Stash the artifacts generated by the publish command
    //
    dir('output') {
      stash([
        name              : 'publishable-output',
        includes          : '**',
        excludes          : '**/.git, **/.gitignore, **/.log, **/temp*, **/node_modules, **/build',
        useDefaultExcludes: true
      ])
    }
  }
}

return this
